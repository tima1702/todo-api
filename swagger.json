{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Simple API for TODO list",
    "description": "API for any todo tests"
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Todo",
      "description": "Api for todo"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/todo": {
      "post": {
        "tags": [
          "Todo"
        ],
        "description": "Create new Todo",
        "parameters": [
          {
            "name": "payload",
            "in": "body",
            "description": "Todo item",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TodoCreate",
              "example": {
                "text": "Test Todo",
                "isDone": true
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Todo is created",
            "schema": {
              "$ref": "#/definitions/TodoResponse"
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Get Todo List",
        "tags": [
          "Todo"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Todo List",
            "schema": {
              "$ref": "#/definitions/TodoListResponse"
            }
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/todo/{_id}": {
      "delete": {
        "description": "Remove Todo",
        "tags": [
          "Todo"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "_id",
            "description": "Object id of Todo",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Empty response"
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Todo"
        ],
        "description": "Toggle todo, Update flag is done",
        "parameters": [
          {
            "type": "string",
            "in": "path",
            "name": "_id",
            "description": "Object id of Todo",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Updated Todo",
            "schema": {
              "$ref": "#/definitions/TodoResponse"
            }
          },
          "400": {
            "description": "Validation Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Todo Item is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Error response",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TodoCreate": {
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "minLength": 3,
          "maxLength": 30
        },
        "isDone": {
          "type": "boolean"
        }
      }
    },
    "Todo": {
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true,
          "title": "Uniq Object ID"
        },
        "text": {
          "type": "string",
          "minLength": 3,
          "maxLength": 30,
          "title": "Todo Text"
        },
        "isDone": {
          "type": "boolean",
          "title": "Complete Flag"
        }
      }
    },
    "TodoResponse": {
      "properties": {
        "data": {
          "$ref": "#/definitions/Todo"
        }
      }
    },
    "TodoList": {
      "type": "array",
      "title": "Array of Todo",
      "items": {
        "$ref": "#/definitions/Todo"
      }
    },
    "TodoListResponse": {
      "properties": {
        "data": {
          "$ref": "#/definitions/TodoList"
        }
      }
    },
    "Error": {
      "required": [
        "type",
        "message"
      ],
      "properties": {
        "type": {
          "type": "string",
          "title": "Error type"
        },
        "message": {
          "type": "string",
          "title": "Error message"
        },
        "stack": {
          "type": "string",
          "title": "Error stack"
        },
        "originError": {
          "type": "object",
          "title": "Origin Error"
        }
      }
    },
    "ErrorResponse": {
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    }
  }
}
